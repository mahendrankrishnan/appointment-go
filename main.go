package main

import (
	"database/sql"
	"fmt"
	"net/http"
	"os"

	"github.com/go-chi/chi/v5"
	"github.com/joho/godotenv"
	_ "github.com/mahendrankrishnan/app1/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/mahendrankrishnan/app1/handlers"
	httpSwagger "github.com/swaggo/http-swagger"
)

// @title Appointments API
// @version 1.0
// @description This is an API for managing appointments.
// @host localhost:8080
// @BasePath /
func main() {

	// Load .env file
	err := godotenv.Load()
	if err != nil {
		panic("Error loading .env file")
	}
	// Read environment variables
	user := os.Getenv("DB_USER")
	password := os.Getenv("DB_PASSWORD")
	dbname := os.Getenv("DB_NAME")
	sslmode := os.Getenv("DB_SSLMODE")

	connStr := fmt.Sprintf("user=%s password=%s dbname=%s sslmode=%s", user, password, dbname, sslmode)
	db, err := sql.Open("postgres", connStr)
	if err != nil {
		panic(err)
	}
	handlers.SetDB(db)
	r := chi.NewRouter()
	r.Get("/swagger/*", httpSwagger.WrapHandler)
	r.Post("/", handlers.CreateAppointment)
	r.Put("/{id}", handlers.UpdateAppointment)
	r.Get("/", handlers.GetAppointments)
	r.Get("/{id}", handlers.GetAppointment)
	r.Delete("/{id}", handlers.DeleteAppointment)
	fmt.Println("Server running on http://localhost:8080")
	http.ListenAndServe(":8080", r)
}
